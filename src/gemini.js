import fetch from "node-fetch";
import dotenv from "dotenv";
dotenv.config();

export async function generateBlogPost(category) {
  const apiKey = process.env.GEMINI_API_KEY;
  const endpoint = "https://generativelanguage.googleapis.com/v1beta/models/gemini-pro-latest:generateContent";

  const prompt = `
  Sen bir uzman iÃ§erik editÃ¶rÃ¼sÃ¼n. 
${category} kategorisinde, SEO uyumlu, Ã¶zgÃ¼n, uzun ve detaylÄ± bir blog yazÄ±sÄ± oluÅŸtur.
### **BaÅŸlÄ±k: [konuya uygun, ilgi Ã§ekici bir baÅŸlÄ±k]**

#### **GiriÅŸ**
Konuya genel bir giriÅŸ yap. Okuyucuyu iÃ§eriÄŸe hazÄ±rla.  
GÃ¶rsel placeholder ekle: {image1}

#### **Alt BaÅŸlÄ±k 1: [ilk Ã¶nemli alt konu]**
Bu alt baÅŸlÄ±k altÄ±nda detaylÄ± aÃ§Ä±klama yap.  
Ã–rnekler, veriler ve ipuÃ§larÄ± ekle.  
Araya bir gÃ¶rsel placeholder ekle: {image2}

##### [Alt Alt BaÅŸlÄ±k 1]
Bu alt alt baÅŸlÄ±k altÄ±nda daha teknik veya Ã¶zel bir detay anlat.  
KÄ±sa paragraflar ve madde iÅŸaretleri kullan.  
GÃ¶rsel placeholder ekle: {image3}

#### **Alt BaÅŸlÄ±k 2: [ikinci Ã¶nemli alt konu]**
Bu bÃ¶lÃ¼mde baÅŸka bir bakÄ±ÅŸ aÃ§Ä±sÄ± veya stratejik bilgi sun.  
KullanÄ±cÄ±yÄ± bilgilendirici ve akÄ±cÄ± bir anlatÄ±m tarzÄ± koru.  
GÃ¶rsel placeholder ekle: {image4}

##### [Alt Alt BaÅŸlÄ±k 2]
Bu alt alt baÅŸlÄ±kta konuya Ã¶rnekler veya gerÃ§ek hayat senaryolarÄ± ekle.  
Liste veya paragraf biÃ§iminde olabilir.  
GÃ¶rsel placeholder ekle: {image5}

#### **SonuÃ§**
YazÄ±yÄ± gÃ¼Ã§lÃ¼ bir Ã¶zet ve Ã§aÄŸrÄ± ile bitir.  
Okuyucuya aksiyon aldÄ±racak veya dÃ¼ÅŸÃ¼ndÃ¼recek ÅŸekilde bitir.
---

Kurallar:
- Dil: TÃ¼rkÃ§e
- Uzunluk: en az 500 kelime
- Alt BaÅŸlÄ±k ve Alt Alt baÅŸlÄ±k sayÄ±sÄ± yazÄ±dan yazÄ±ya deÄŸiÅŸebilir ama format yukardaki gibi olacak.
- Her bÃ¶lÃ¼mde aÃ§Ä±klayÄ±cÄ±, Ã¶ÄŸretici ve doÄŸal bir anlatÄ±m kullan.
- Ä°Ã§eriÄŸe gÃ¶rsel yerleri iÃ§in {imageX} placeholderâ€™larÄ±nÄ± koymayÄ± UNUTMA.
- Placeholder'larÄ± yalnÄ±zca yeni bir konuya geÃ§erken yani gerÃ§ekten ihityacÄ±n olunca kullan,Ã§ok fazla gÃ¶rsel placeholder'Ä± koyma.
- BaÅŸlÄ±k, alt baÅŸlÄ±k, alt-alt baÅŸlÄ±k ve sonuÃ§ formatÄ±nÄ± **mutlaka koru**.

`;

  const body = {
    contents: [{ parts: [{ text: prompt }] }],
  };

  const response = await fetch(`${endpoint}?key=${apiKey}`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(body),
  });

  const data = await response.json();


  const text = data?.candidates?.[0]?.content?.parts?.[0]?.text || "BoÅŸ iÃ§erik dÃ¶ndÃ¼ ğŸ˜…";
  console.log(text)
  return text;
}